{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AIQ11\\\\Documents\\\\webservice\\\\src\\\\components\\\\File.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst File = () => {\n  _s();\n\n  const fileInput = useRef(null);\n  const [fileName, setFileName] = useState(\"\");\n  const [excelData, setExcelData] = useState(\"\");\n\n  const handleTriggerReadFile = () => {\n    if (fileInput.current) {\n      fileInput.current.click();\n    }\n  };\n\n  const handleReadFile = fileObj => {\n    if (fileObj) {\n      setFileName(fileObj.name);\n      fileObj.arrayBuffer().then(buffer => {\n        // ファイルを読み込む\n        const workbook = XLSX.read(buffer, {\n          type: 'buffer',\n          bookVBA: true\n        }); // 最初のシート名を取得する\n\n        const firstSheetName = workbook.SheetNames[0]; // 最初のシート名から、ワークシートを取得する\n\n        const worksheet = workbook.Sheets[firstSheetName]; // シートのデータをJSONとして取得する\n\n        const data = XLSX.utils.sheet_to_json(worksheet); // JSON文字列としてstateに保存する\n\n        setExcelData(JSON.stringify(data));\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"JumpList\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleTriggerReadFile(),\n      className: \"JumpList__item\",\n      children: \"FILE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), !!fileName && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"\\u30D5\\u30A1\\u30A4\\u30EB\\u540D\\uFF1A\", fileName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        display: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        ref: fileInput,\n        onChange: e => {\n          e.preventDefault();\n          handleReadFile(e.currentTarget.files[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), !!excelData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: excelData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(File, \"DObHkC638fApGypN3rU3R+cEkH8=\");\n\n_c = File;\nexport default File;\n\nvar _c;\n\n$RefreshReg$(_c, \"File\");","map":{"version":3,"sources":["C:/Users/AIQ11/Documents/webservice/src/components/File.tsx"],"names":["React","useRef","useState","XLSX","File","fileInput","fileName","setFileName","excelData","setExcelData","handleTriggerReadFile","current","click","handleReadFile","fileObj","name","arrayBuffer","then","buffer","workbook","read","type","bookVBA","firstSheetName","SheetNames","worksheet","Sheets","data","utils","sheet_to_json","JSON","stringify","display","e","preventDefault","currentTarget","files"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMC,SAAS,GAAGJ,MAAM,CAAmB,IAAnB,CAAxB;AACA,QAAM,CAAEK,QAAF,EAAYC,WAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAEM,SAAF,EAAaC,YAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMQ,qBAAqB,GAAG,MAAM;AAClC,QAAIL,SAAS,CAACM,OAAd,EAAuB;AACrBN,MAAAA,SAAS,CAACM,OAAV,CAAkBC,KAAlB;AACD;AACF,GAJD;;AAKA,QAAMC,cAAc,GAAIC,OAAD,IAAmB;AACxC,QAAIA,OAAJ,EAAa;AACXP,MAAAA,WAAW,CAACO,OAAO,CAACC,IAAT,CAAX;AACAD,MAAAA,OAAO,CAACE,WAAR,GAAsBC,IAAtB,CAA4BC,MAAD,IAAY;AACrC;AACA,cAAMC,QAAQ,GAAGhB,IAAI,CAACiB,IAAL,CAAUF,MAAV,EAAkB;AAAEG,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,OAAO,EAAE;AAA3B,SAAlB,CAAjB,CAFqC,CAGrC;;AACA,cAAMC,cAAc,GAAGJ,QAAQ,CAACK,UAAT,CAAoB,CAApB,CAAvB,CAJqC,CAKrC;;AACA,cAAMC,SAAS,GAAGN,QAAQ,CAACO,MAAT,CAAgBH,cAAhB,CAAlB,CANqC,CAOrC;;AACA,cAAMI,IAAI,GAAGxB,IAAI,CAACyB,KAAL,CAAWC,aAAX,CAAyBJ,SAAzB,CAAb,CARqC,CASrC;;AACAhB,QAAAA,YAAY,CAACqB,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAD,CAAZ;AACD,OAXD;AAYD;AACF,GAhBD;;AAkBA,sBACE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA,4BAEI;AAAQ,MAAA,OAAO,EAAE,MAAMjB,qBAAqB,EAA5C;AAAgD,MAAA,SAAS,EAAC,gBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGK,CAAC,CAACJ,QAAF,iBAAc;AAAA,yDAAaA,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAHnB,eAII;AAAM,MAAA,KAAK,EAAE;AAAE0B,QAAAA,OAAO,EAAE;AAAX,OAAb;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,MAAM,EAAC,mEAA1B;AAA8F,QAAA,GAAG,EAAE3B,SAAnG;AAA8G,QAAA,QAAQ,EAAG4B,CAAD,IAAO;AAC7HA,UAAAA,CAAC,CAACC,cAAF;AACArB,UAAAA,cAAc,CAACoB,CAAC,CAACE,aAAF,CAAgBC,KAAhB,CAAsB,CAAtB,CAAD,CAAd;AACD;AAHD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJJ,EAUK,CAAC,CAAC5B,SAAF,iBACC;AAAA,gBACGA;AADH;AAAA;AAAA;AAAA;AAAA,YAXN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA/CD;;GAAMJ,I;;KAAAA,I;AAiDN,eAAeA,IAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport XLSX from \"xlsx\";\r\n\r\nconst File: React.FC = () => {\r\n  const fileInput = useRef<HTMLInputElement>(null);\r\n  const [ fileName, setFileName ] = useState(\"\");\r\n  const [ excelData, setExcelData ] = useState(\"\");\r\n\r\n  const handleTriggerReadFile = () => {\r\n    if (fileInput.current) {\r\n      fileInput.current.click();\r\n    }\r\n  }\r\n  const handleReadFile = (fileObj: File) => {\r\n    if (fileObj) {\r\n      setFileName(fileObj.name);\r\n      fileObj.arrayBuffer().then((buffer) => {\r\n        // ファイルを読み込む\r\n        const workbook = XLSX.read(buffer, { type: 'buffer', bookVBA: true});\r\n        // 最初のシート名を取得する\r\n        const firstSheetName = workbook.SheetNames[0];\r\n        // 最初のシート名から、ワークシートを取得する\r\n        const worksheet = workbook.Sheets[firstSheetName];\r\n        // シートのデータをJSONとして取得する\r\n        const data = XLSX.utils.sheet_to_json(worksheet);\r\n        // JSON文字列としてstateに保存する\r\n        setExcelData(JSON.stringify(data));\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li className=\"JumpList\">\r\n      {/* <div className=\"File__container\"> */}\r\n        <button onClick={() => handleTriggerReadFile()} className=\"JumpList__item\">FILE</button>\r\n        {!!fileName && <span>ファイル名：{fileName}</span>}\r\n        <form style={{ display: 'none' }}>\r\n          <input type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" ref={fileInput} onChange={(e) => {\r\n            e.preventDefault();\r\n            handleReadFile(e.currentTarget.files[0])\r\n          }}/>\r\n        </form>\r\n        {!!excelData && (\r\n          <div>\r\n            {excelData}\r\n          </div>\r\n        )}\r\n      {/* </div> */}\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default File;"]},"metadata":{},"sourceType":"module"}