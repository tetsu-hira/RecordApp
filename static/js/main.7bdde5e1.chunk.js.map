{"version":3,"sources":["components/Header.tsx","components/Footer.tsx","components/Process.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","useState","title","setTitle","useEffect","document","className","type","onChange","e","target","value","onClick","onBlur","Footer","Process","plan","setPlan","time1","setTime1","time2","setTime2","list","setList","data","setData","count","setCount","win","setWin","lose","setLose","drawWin","setDrawWin","drawDraw","setDrawDraw","drawLose","setDrawLose","addTime1","index","minute","targetPlan","find","elem","nextPlan","marks","Number","prevPlan","i","countPlan","total","filter","plans","name","reduce","sum","element","score","amount","point","length","console","log","addTime2","map","item","idx","gross","addName","result1","addPlan","id","window","scrollTo","top","behavior","delTeam","newPlan","splice","result","result2","handleRemoveTask","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7bdde5e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\n\r\n\r\nconst Header: React.FC = () => {\r\nconst [ title, setTitle ] = useState<string>(\"＜ここをクリックして大会名や部門を入力してください＞\")\r\n\r\n  const changeTitle = (e:any) => {\r\n    setTitle(e.target.value);\r\n  }\r\n  const titleClear = () => {\r\n    setTitle('');\r\n  }\r\n  const returnTitle = () => {\r\n    if (!title) {\r\n      setTitle(\"＜ここをクリックして大会名や部門を入力してください＞\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Update the document title using the browser API\r\n    document.title = title\r\n  });\r\n\r\n  return (\r\n    <div className=\"Header\">\r\n        <input className=\"HeaderTitle\" type=\"text\" onChange={changeTitle} onClick={titleClear} onBlur={returnTitle} value={title} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <div className=\"Footer\">© All rights reserved by Tetsuhiro.Hirabayashi</div>\r\n  )\r\n}\r\n\r\n\r\nexport default Footer;\r\n","import { useState } from \"react\";\r\nimport * as React from 'react';\r\n// import ExcelJS from \"exceljs\";\r\n// import File from \"./File\";\r\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\r\n// import Select from 'react-select';\r\n// import ReactDOM from \"react-dom\";\r\n\r\n\r\ntype Pro = {\r\n  id: number\r\n  name: any\r\n  gross: number\r\n  point: number\r\n  score: number\r\n}\r\n\r\ntype Scr = {\r\n  name: any\r\n  time1: number\r\n  time2: number\r\n  count: number\r\n  marks: number\r\n}\r\n\r\n// type Cell = {\r\n//   name: string\r\n//   time1: number\r\n// }\r\n// const reorder = (\r\n//   list: ItemType[],\r\n//   startIndex: number,\r\n//   endIndex: number\r\n// ): ItemType[] => {\r\n//   const result = Array.from(list);\r\n//   const [removed] = result.splice(startIndex, 1);\r\n//   result.splice(endIndex, 0, removed);\r\n\r\n//   return result;\r\n// };\r\n\r\n\r\nconst Process: React.FC = () => {\r\n  const [ plan, setPlan ] = useState<Scr[]>([]);\r\n  const [ time1, setTime1 ] = useState<number>(0);\r\n  const [ time2, setTime2 ] = useState<number>(0);\r\n  const [ list, setList ] = useState<Pro[]>([]);\r\n  const [ data, setData ] = useState<any>();\r\n  const [ count, setCount ] =useState<number>(0);\r\n  const [ win, setWin ] = useState<number>(0);\r\n  const [ lose, setLose ] = useState<number>(0);\r\n  const [ drawWin, setDrawWin ] = useState<number>(0);\r\n  const [ drawDraw, setDrawDraw ] = useState<number>(0);\r\n  const [ drawLose, setDrawLose ] = useState<number>(0);\r\n\r\n\r\n\r\n  const changeData = (e:any) => {\r\n    setData(e.target.value)\r\n    // setCount(Math.random());\r\n  }\r\n  const changeWin = (e:any) => {\r\n    setWin(e.target.value)\r\n    setLose(0);\r\n  }\r\n  const changeDrawWin = (e:any) => {\r\n    setDrawWin(e.target.value)\r\n  }\r\n  const changeDrawDraw = (e:any) => {\r\n    setDrawDraw(e.target.value)\r\n  }\r\n  const changeDrawLose = (e:any) => {\r\n    setDrawLose(e.target.value)\r\n  }\r\n  const addList = () => {\r\n    setList([...list, {\r\n      id: data,\r\n      name: data,\r\n      gross: 0,\r\n      point: 0,\r\n      score: 0,\r\n    }]);\r\n    setData('');\r\n  }\r\n\r\n  const handleRemoveTask = (index:number) => {\r\n    const delTeam: any = plan.find((elem) => plan[index] === elem )\r\n    const newPlan = [...plan]\r\n    newPlan.splice(index, 1)\r\n    setPlan(newPlan)\r\n    const result: any = newPlan.filter(plans => {\r\n      return plans.name === delTeam.name\r\n    })\r\n    const result1: any = list.find((elem) => elem.name === delTeam.name)\r\n    const result2 = result.length\r\n    result1.gross = result2\r\n  }\r\n\r\n  const addPlan = (index: number) => {\r\n    const addName: any = list.find((elem) => list[index] === elem )\r\n    setPlan([...plan, {name: addName.name, time1: 0, time2: 0, count: 0, marks: 0}]);\r\n    const result: any = plan.filter(plans => {\r\n      return plans.name === list[index].name\r\n    })\r\n    const result1 = result.length + 1;\r\n    list[index].gross = result1;\r\n  }\r\n\r\n\r\n  const addTime1 = (index:number, minute:number) => {\r\n    const targetPlan: Scr = plan.find((elem) => plan[index] === elem)\r\n    targetPlan.time1 = targetPlan.time1 + minute\r\n    setTime1(targetPlan.time1)\r\n    // 奇数か偶数で処理を変える\r\n    if (index % 2 === 0) {\r\n      const nextPlan: Scr = plan.find((elem) => plan[index + 1] === elem);\r\n      targetPlan.count = (targetPlan.time1 + targetPlan.time2) - (nextPlan.time1 + nextPlan.time2);\r\n      nextPlan.count = (nextPlan.time1 + nextPlan.time2) - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (targetPlan.time1 > nextPlan.time1 && targetPlan.time2 > nextPlan.time2) {\r\n        targetPlan.marks = Number(win);\r\n          nextPlan.marks = Number(lose);\r\n      } else if (targetPlan.time1 < nextPlan.time1 && targetPlan.time2 < nextPlan.time2) {\r\n        targetPlan.marks = Number(lose);\r\n          nextPlan.marks = Number(win);\r\n      } else if ((targetPlan.time1 < nextPlan.time1 && targetPlan.time2 > nextPlan.time2) || (targetPlan.time1 > nextPlan.time1 && targetPlan.time2 < nextPlan.time2)) {\r\n        if ((targetPlan.time1 + targetPlan.time2) > (nextPlan.time1 + nextPlan.time2)) {\r\n          targetPlan.marks = Number(drawWin);\r\n            nextPlan.marks = Number(drawLose);\r\n        } else if ((targetPlan.time1 + targetPlan.time2) < (nextPlan.time1 + nextPlan.time2)) {\r\n          targetPlan.marks = Number(drawLose);\r\n            nextPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n            nextPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n          nextPlan.marks = Number(lose);\r\n      }\r\n    } else {\r\n      const prevPlan: Scr = plan.find((elem) => plan[index - 1] === elem);\r\n      targetPlan.count = (targetPlan.time1 + targetPlan.time2) - (prevPlan.time1 + prevPlan.time2);\r\n      prevPlan.count = (prevPlan.time1 + prevPlan.time2) - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (targetPlan.time1 > prevPlan.time1 && targetPlan.time2 > prevPlan.time2) {\r\n        targetPlan.marks = Number(win);\r\n          prevPlan.marks = Number(lose);\r\n      } else if (targetPlan.time1 < prevPlan.time1 && targetPlan.time2 < prevPlan.time2) {\r\n        targetPlan.marks = Number(lose);\r\n          prevPlan.marks = Number(win);\r\n      } else if ((targetPlan.time1 < prevPlan.time1 && targetPlan.time2 > prevPlan.time2) || (targetPlan.time1 > prevPlan.time1 && targetPlan.time2 < prevPlan.time2)) {\r\n        if ((targetPlan.time1 + targetPlan.time2) > (prevPlan.time1 + prevPlan.time2)) {\r\n          targetPlan.marks = Number(drawWin);\r\n            prevPlan.marks = Number(drawLose);\r\n        } else if ((targetPlan.time1 + targetPlan.time2) < (prevPlan.time1 + prevPlan.time2)) {\r\n          targetPlan.marks = Number(drawLose);\r\n            prevPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n            prevPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n          prevPlan.marks = Number(lose);\r\n      }\r\n    }\r\n    // ここから繰り返し処理\r\n    for ( let i = 0; i < list.length; i++ ) {\r\n      const countPlan: Pro = list.find((elem) => list[i] === elem)\r\n      // 得失点の合計値をtotalに代入\r\n      const sumCount: any = plan.filter(plans => {\r\n        return plans.name === countPlan.name\r\n      })\r\n      const total = sumCount.reduce(function(sum: number, element: any) {\r\n        return sum + element.count;\r\n      }, 0);\r\n      // 合計をlistに反映\r\n      const update: any = list.find((elem) => elem.name === countPlan.name);\r\n      update.score = total;\r\n      // 勝ち点の合計値をamountに代入\r\n      const sumMarks: any = plan.filter(plans => {\r\n        return plans.name === countPlan.name\r\n      })\r\n      const amount = sumMarks.reduce(function(sum: number, element: any) {\r\n        return sum + element.marks;\r\n      }, 0);\r\n      // 合計をlistに反映\r\n      const overwrite: any = list.find((elem) => elem.name === countPlan.name);\r\n      overwrite.point = amount;\r\n    }\r\n    // ここまで繰り返し\r\n    // コンソールでエラーを回避\r\n    console.log(\"ここからエラー回避\");\r\n    console.log(time1);\r\n    console.log(count);\r\n  }\r\n  const addTime2 = (index:number, minute:number) => {\r\n    const targetPlan: any = plan.find((elem) => plan[index] === elem )\r\n    targetPlan.time2 = targetPlan.time2 + minute\r\n    setTime2(targetPlan.time2)\r\n    // 奇数か偶数で処理を変える\r\n    if (index % 2 === 0) {\r\n      const nextPlan: Scr = plan.find((elem) => plan[index + 1] === elem);\r\n      targetPlan.count = (targetPlan.time1 + targetPlan.time2) - (nextPlan.time1 + nextPlan.time2);\r\n      nextPlan.count = (nextPlan.time1 + nextPlan.time2) - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (targetPlan.time1 > nextPlan.time1 && targetPlan.time2 > nextPlan.time2) {\r\n        targetPlan.marks = Number(win);\r\n          nextPlan.marks = Number(lose);\r\n      } else if (targetPlan.time1 < nextPlan.time1 && targetPlan.time2 < nextPlan.time2) {\r\n        targetPlan.marks = Number(lose);\r\n          nextPlan.marks = Number(win);\r\n      } else if ((targetPlan.time1 < nextPlan.time1 && targetPlan.time2 > nextPlan.time2) || (targetPlan.time1 > nextPlan.time1 && targetPlan.time2 < nextPlan.time2)) {\r\n        if ((targetPlan.time1 + targetPlan.time2) > (nextPlan.time1 + nextPlan.time2)) {\r\n          targetPlan.marks = Number(drawWin);\r\n            nextPlan.marks = Number(drawLose);\r\n        } else if ((targetPlan.time1 + targetPlan.time2) < (nextPlan.time1 + nextPlan.time2)) {\r\n          targetPlan.marks = Number(drawLose);\r\n            nextPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n            nextPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n          nextPlan.marks = Number(lose);\r\n      }\r\n    } else {\r\n      const prevPlan: Scr = plan.find((elem) => plan[index - 1] === elem);\r\n      targetPlan.count = (targetPlan.time1 + targetPlan.time2) - (prevPlan.time1 + prevPlan.time2);\r\n      prevPlan.count = (prevPlan.time1 + prevPlan.time2) - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (targetPlan.time1 > prevPlan.time1 && targetPlan.time2 > prevPlan.time2) {\r\n        targetPlan.marks = Number(win);\r\n          prevPlan.marks = Number(lose);\r\n      } else if (targetPlan.time1 < prevPlan.time1 && targetPlan.time2 < prevPlan.time2) {\r\n        targetPlan.marks = Number(lose);\r\n          prevPlan.marks = Number(win);\r\n      } else if ((targetPlan.time1 < prevPlan.time1 && targetPlan.time2 > prevPlan.time2) || (targetPlan.time1 > prevPlan.time1 && targetPlan.time2 < prevPlan.time2)) {\r\n        if ((targetPlan.time1 + targetPlan.time2) > (prevPlan.time1 + prevPlan.time2)) {\r\n          targetPlan.marks = Number(drawWin);\r\n            prevPlan.marks = Number(drawLose);\r\n        } else if ((targetPlan.time1 + targetPlan.time2) < (prevPlan.time1 + prevPlan.time2)) {\r\n          targetPlan.marks = Number(drawLose);\r\n            prevPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n            prevPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n          prevPlan.marks = Number(lose);\r\n      }\r\n    }\r\n    // ここから繰り返し処理\r\n    for ( let i = 0; i < list.length; i++ ) {\r\n      const countPlan: Pro = list.find((elem) => list[i] === elem)\r\n      // 得失点の合計値をtotalに代入\r\n      const sumCount: any = plan.filter(plans => {\r\n        return plans.name === countPlan.name\r\n      })\r\n      const total = sumCount.reduce(function(sum: number, element: any) {\r\n        return sum + element.count;\r\n      }, 0);\r\n      // 合計をlistに反映\r\n      const update: any = list.find((elem) => elem.name === countPlan.name);\r\n      update.score = total;\r\n      // 勝ち点の合計値をamountに代入\r\n      const sumMarks: any = plan.filter(plans => {\r\n        return plans.name === countPlan.name\r\n      })\r\n      const amount = sumMarks.reduce(function(sum: number, element: any) {\r\n        return sum + element.marks;\r\n      }, 0);\r\n      // 合計をlistに反映\r\n      const overwrite: any = list.find((elem) => elem.name === countPlan.name);\r\n      overwrite.point = amount;\r\n    }\r\n    // ここまで繰り返し\r\n    // コンソールでエラーを回避\r\n    console.log(time2);\r\n    console.log(count);\r\n  }\r\n\r\n  /* いずれは実装したい\r\n  const handleClickDownloadButton = async (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    format:  \"xlsx\" | \"csv\"\r\n  ) => {\r\n    e.preventDefault();\r\n\r\n    const workbook = new ExcelJS.Workbook();\r\n    workbook.addWorksheet(\"sheet1\");\r\n    const worksheet = workbook.getWorksheet(\"sheet1\");\r\n\r\n    worksheet.columns = [\r\n      { header: \"No.\", key: \"\", width: 10 },\r\n      { header: \"工程\", key: \"name\", width: 20},\r\n      { header: \"時間\", key: \"time1\", width: 20}\r\n    ];\r\n\r\n    worksheet.addRows(plan);\r\n\r\n    const uint8Array =\r\n      format === \"xlsx\"\r\n        ? await workbook.xlsx.writeBuffer() //xlsxの場合\r\n        : await workbook.csv.writeBuffer(); //csvの場合\r\n    const blob = new Blob([uint8Array], { type: \"application/octet-binary \"});\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"NewFile.\" + format; //フォーマットによって拡張子を変える\r\n    a.click();\r\n    a.remove();\r\n  };\r\n  */\r\n\r\n  // const handleOnDragEnd = (result:any) => {\r\n  //   const items = Array.from(plan);\r\n  //   const [reorderedItem] = items.splice(result.source.index, 1);\r\n  //   items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n  //   setPlan(items);\r\n  // }\r\n\r\n  const returnTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  // 確認のため設置\r\n  console.log(list);\r\n\r\n\r\n  return (\r\n    <div className=\"Process\">\r\n      <div className=\"ProcessContainer\">\r\n        <div className=\"ProcessMain\">\r\n          <div className=\"ProcessList\">\r\n            <h1>【チーム一覧】</h1>\r\n            <div className=\"ProcessList__Border\">\r\n              <div className=\"Head\">\r\n                <div className=\"name\">チーム名</div>\r\n                <div className=\"gross\">試合数</div>\r\n                <div className=\"point\">勝ち点</div>\r\n                <div className=\"score\">得失点</div>\r\n                <div className=\"space\"></div>\r\n              </div>\r\n              <ul className=\"Item\">\r\n                { list.map((item:Pro, idx: number) => (\r\n                  <li className=\"ItemList\" key={item.name}>\r\n                    <div className=\"ItemList__data\">\r\n                      <div className=\"name\">{item.name}</div>\r\n                      <div className=\"gross\">{item.gross}</div>\r\n                      <div className=\"point\">{item.point}</div>\r\n                      <div className=\"score\">{item.score}</div>\r\n                      <button className=\"AddPlan\" onClick={()=> addPlan(idx)}>登録</button>\r\n                    </div>\r\n                </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n            <h1>【勝ち点を入力】</h1>\r\n            <div className=\"Insert\">\r\n              <div className=\"InsertContent\">\r\n                <div className=\"InsertContent__text\">勝ち</div>\r\n                <input className=\"InsertContent__entry\" type=\"number\" id=\"win\" onChange={changeWin}></input>\r\n              </div>\r\n              <div className=\"InsertContent\">\r\n              <div className=\"InsertContent__text\">分勝</div>\r\n                <input className=\"InsertContent__entry\" type=\"number\" id=\"draw_win\" onChange={changeDrawWin}></input>\r\n              </div>\r\n              <div className=\"InsertContent\">\r\n              <div className=\"InsertContent__text\">分分</div>\r\n                <input className=\"InsertContent__entry\" type=\"number\" id=\"draw_draw\" onChange={changeDrawDraw}></input>\r\n              </div>\r\n              <div className=\"InsertContent\">\r\n              <div className=\"InsertContent__text\">分負</div>\r\n                <input className=\"InsertContent__entry\" type=\"number\" id=\"draw_lose\" onChange={changeDrawLose}></input>\r\n              </div>\r\n            </div>\r\n            <h1>【チームを追加】</h1>\r\n            <div className=\"Form\">\r\n              <div className=\"FormContent\">\r\n                <input className=\"FormContent__name\" type=\"text\" id=\"name\" value={data} onChange={changeData}></input>\r\n                <button className=\"FormContent__button\" type=\"submit\" onClick={addList}>チーム追加</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"upButton\"  onClick={returnTop}></div>\r\n          </div>\r\n          <div className=\"Result\">\r\n            <h1 className=\"title\">【試合内容】</h1>\r\n              <div className=\"Result__Border\">\r\n                { plan.map((item, idx: number) => (\r\n                  <div className=\"Flex\" key={idx}>\r\n                    <div className=\"FlexNumber\">\r\n                      { idx % 2 === 0 && <div className=\"FlexNumber__item\">第{idx/2+1}試合</div> }\r\n                    </div>\r\n                    <div className=\"FlexCross\">\r\n                      { idx % 2 !== 0 && <div className=\"FlexCross__item\">✖</div> }\r\n                      { idx % 2 !== 0 && <div className=\"FlexCross__item\">✖</div> }\r\n                    </div>\r\n                    <div className=\"FlexCount\">\r\n                      <div className=\"FlexCount__flex\">\r\n                        { idx % 2 === 0 && <button className=\"AddCount\" onClick={()=> addTime1(idx, -1)}>-</button> }\r\n                        { idx % 2 === 0 && <button className=\"AddCount\" onClick={()=> addTime1(idx, 5)}>+</button> }\r\n                        { idx % 2 !== 0 && <div className=\"ResultTime\">{item.time1}</div> }\r\n                      </div>\r\n                      <div className=\"FlexCount__flex\">\r\n                        { idx % 2 === 0 && <button className=\"AddCount\" onClick={()=> addTime2(idx, -1)}>-</button> }\r\n                        { idx % 2 === 0 && <button className=\"AddCount\" onClick={()=> addTime2(idx, 5)}>+</button> }\r\n                        { idx % 2 !== 0 && <div className=\"ResultTime\">{item.time2}</div> }\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"FlexName\">\r\n                      <div className=\"ResultName\">{item.name}</div>\r\n                      <button className=\"DeleteButton\" onClick={()=> handleRemoveTask(idx)}>取消</button>\r\n                    </div>\r\n                    <div className=\"FlexCount\">\r\n                      <div className=\"FlexCount__flex\">\r\n                        { idx % 2 !== 0 && <button className=\"AddCount\" onClick={()=> addTime1(idx, -1)}>-</button> }\r\n                        { idx % 2 !== 0 && <button className=\"AddCount\" onClick={()=> addTime1(idx, 5)}>+</button> }\r\n                        { idx % 2 === 0 && <div className=\"ResultTime\">{item.time1}</div> }\r\n                      </div>\r\n                      <div className=\"FlexCount__flex\">\r\n                        { idx % 2 !== 0 && <button className=\"AddCount\" onClick={()=> addTime2(idx, -1)}>-</button> }\r\n                        { idx % 2 !== 0 && <button className=\"AddCount\" onClick={()=> addTime2(idx, 5)}>+</button> }\r\n                        { idx % 2 === 0 && <div className=\"ResultTime\">{item.time2}</div> }\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )) }\r\n              </div>\r\n            <div>\r\n              {/* <button onClick={(e) => handleClickDownloadButton(e, \"xlsx\")}>\r\n                Excel印刷\r\n              </button> */}\r\n              {/* <button onClick={(e) => handleClickDownloadButton(e, \"csv\")}>\r\n                CSV形式\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Process;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Process from './components/Process';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Process />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}